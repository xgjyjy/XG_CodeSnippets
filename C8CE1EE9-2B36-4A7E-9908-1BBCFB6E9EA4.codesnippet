<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>collectionView-xg</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>&lt;UICollectionViewDataSource,UICollectionViewDelegate,UICollectionViewDelegateFlowLayout&gt;

/// &lt;#XXX#&gt;
@property (nonatomic, strong) UICollectionView *customCollectionView;

/// collectionView的数据源
@property (nonatomic, strong) NSMutableArray *dataSourceArray;


#pragma mark - UICollectionViewDataSource

- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView {
    return self.dataSourceArray.count;
}

- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section {
    return [self.dataSourceArray[section] count];
}

- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath {
    UICollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:NSStringFromClass([UICollectionViewCell class]) forIndexPath:indexPath];
    if (self.dataSourceArray.count &gt; 0) {
        //        XZYCityListDatabase *model = self.dataArray[indexPath.section][indexPath.row];
        //        cell.model = model;
    }
    return cell;
}

- (UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath {
    UICollectionReusableView *headView = [collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader
                                                                            withReuseIdentifier:NSStringFromClass([UICollectionReusableView class])
                                                                                   forIndexPath:indexPath];
//    UICollectionReusableView *footerView = [collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionFooter
//                                                                               withReuseIdentifier:NSStringFromClass([UICollectionReusableView class])
//                                                                                      forIndexPath:indexPath];
    return headView;
}

#pragma mark - UICollectionViewDelegateFlowLayout

- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath {
    return CGSizeMake(50, 50);
}

- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section {
    return CGSizeMake(50, 50);
}

- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout referenceSizeForFooterInSection:(NSInteger)section {
    return CGSizeMake(50, 50);
}

#pragma mark - UICollectionViewDelegate

- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath {
    [collectionView deselectItemAtIndexPath:indexPath animated:YES];
    if (self.dataSourceArray.count == 0) {
        return;
    }
    
}

- (UICollectionView *)customCollectionView {
    if (!_customCollectionView) {
        _customCollectionView = ({
            UICollectionViewFlowLayout *layout = [[UICollectionViewFlowLayout alloc] init];
            // 设置item的行间距和列间距 (或使用UICollectionViewDelegateFlowLayout的方法设置)
            layout.minimumInteritemSpacing = 10;
            layout.minimumLineSpacing = 10;
            
            // 设置item的大小 (或使用UICollectionViewDelegateFlowLayout的方法设置)
            layout.itemSize = CGSizeMake(50, 50);
            
            // 设置每个分区的 上左下右 的内边距 (或使用UICollectionViewDelegateFlowLayout的方法设置)
            layout.sectionInset = UIEdgeInsetsMake(5, 5 ,5, 5);
            
            // 设置区头和区尾的大小 (或使用UICollectionViewDelegateFlowLayout的方法设置)
            layout.headerReferenceSize = CGSizeMake(50, 65);
            layout.footerReferenceSize = CGSizeMake(50, 65);
            
            // 设置分区的头视图和尾视图 是否始终固定在屏幕上边和下边
            layout.sectionFootersPinToVisibleBounds = YES;
            
            // 设置滚动条方向
            layout.scrollDirection = UICollectionViewScrollDirectionVertical;
            
            UICollectionView *collectionView = [[UICollectionView alloc] initWithFrame:CGRectZero collectionViewLayout:layout];
            collectionView.backgroundColor = [UIColor greenColor];
            collectionView.showsVerticalScrollIndicator = NO;
            collectionView.showsHorizontalScrollIndicator = NO;
            collectionView.delegate = self;
            collectionView.dataSource = self;
            [collectionView registerClass:[UICollectionReusableView class] forCellWithReuseIdentifier:NSStringFromClass([UICollectionReusableView class])];
            collectionView;
        });
    }
    return _customCollectionView;
}

- (NSMutableArray *)dataSourceArray {
    if (!_dataSourceArray) {
        _dataSourceArray = [NSMutableArray array];
    }
    return _dataSourceArray;
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>C8CE1EE9-2B36-4A7E-9908-1BBCFB6E9EA4</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>collectionView-xg</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
